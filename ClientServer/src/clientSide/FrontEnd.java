/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clientSide;

import javax.swing.SwingUtilities;
import javax.swing.SwingWorker;

/**
 *
 * @author Vareto
 */
public class FrontEnd extends javax.swing.JFrame {

	/**
	 * Creates new form FrontEnd
	 */
	public FrontEnd() {
		initComponents();
		initCustomized();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelMessage = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaMessage = new javax.swing.JTextArea();
        labelTimeout = new javax.swing.JLabel();
        labelMS = new javax.swing.JLabel();
        buttonSubmit = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        textAreaStatus = new javax.swing.JTextArea();
        textFieldTimeout = new javax.swing.JFormattedTextField();
        labelIP = new javax.swing.JLabel();
        textFieldIP = new javax.swing.JTextField();
        labelPort = new javax.swing.JLabel();
        textFieldPort = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ClientSide");
        setResizable(false);

        labelMessage.setText("Message:");

        textAreaMessage.setColumns(20);
        textAreaMessage.setRows(5);
        textAreaMessage.setToolTipText("Insert your");
        textAreaMessage.setName(""); // NOI18N
        textAreaMessage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textAreaMessageKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(textAreaMessage);

        labelTimeout.setText("Timeout:");

        labelMS.setText("ms");

        buttonSubmit.setText("Submit");
        buttonSubmit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonSubmitMouseClicked(evt);
            }
        });

        textAreaStatus.setEditable(false);
        textAreaStatus.setColumns(20);
        textAreaStatus.setRows(3);
        jScrollPane2.setViewportView(textAreaStatus);

        textFieldTimeout.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("########"))));
        textFieldTimeout.setText("10");

        labelIP.setText("Server IP Address:");

        textFieldIP.setText("127.0.0.1");

        labelPort.setText("Port:");

        textFieldPort.setText("1234");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelMessage)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(72, 72, 72)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(labelTimeout)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(textFieldTimeout, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(labelMS)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(buttonSubmit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(0, 91, Short.MAX_VALUE)
                                        .addComponent(labelIP)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(textFieldIP, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(labelPort)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(textFieldPort, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelIP)
                    .addComponent(textFieldIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelPort)
                    .addComponent(textFieldPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelMessage))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTimeout)
                    .addComponent(labelMS)
                    .addComponent(buttonSubmit)
                    .addComponent(textFieldTimeout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	/**
	 * Evento criado para personalizar a interface grafica do sistema no momento
	 * em que ela e criada. E executada uma unica vez, durante a inicializacao
	 */
	private void initCustomized() {
		this.buttonSubmit.setEnabled(false);
	}

	/**
	 * Evento chamado toda vez que o botao 'Submit' e clicado para que a
	 * mensagem seja enviada
	 *
	 * @param evt Mouse Event
	 */
    private void buttonSubmitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonSubmitMouseClicked
		// Obtendo todos os textos existentes na interface
		String ipAddress = this.textFieldIP.getText();
		int port = Integer.parseInt(this.textFieldPort.getText());
		String message = this.textAreaMessage.getText();
		int timeout = Integer.parseInt(this.textFieldTimeout.getText());

		// Chamando construtor da classe 'AdditionalThreads' 
		if (timeout > 0) {
			threads = new AdditionalThreads(ipAddress, port, message, timeout);
		} else {
			threads = new AdditionalThreads(ipAddress, port, message);
		}

		// Gerar feedback para usuario
		UpdateSwing updateInterface = new UpdateSwing();
		SwingUtilities.invokeLater(updateInterface);
    }//GEN-LAST:event_buttonSubmitMouseClicked

	/**
	 * Evento chamado toda vez que algum caractere e adicionado ou removido de
	 * textAreaMessage. Se nao existir mensagem a ser enviada, o botao
	 * buttonSubmit e desativado
	 *
	 * @param evt Key Event
	 */
    private void textAreaMessageKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textAreaMessageKeyTyped
		if (this.textAreaMessage.getText().isEmpty()) {
			this.buttonSubmit.setEnabled(false);
		} else {
			this.buttonSubmit.setEnabled(true);
		}
    }//GEN-LAST:event_textAreaMessageKeyTyped

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(FrontEnd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(FrontEnd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(FrontEnd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(FrontEnd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(() -> {
			new FrontEnd().setVisible(true);
		});
	}

	/**
	 * Classe criada para atualizar textAreaStatus apos tentar enviar uma
	 * mensagem
	 */
	private class UpdateSwing implements Runnable {

		@Override
		@SuppressWarnings("CallToPrintStackTrace")
		public void run() {
			try {
				// Imprimir mensagem para usuario do ClientSide
				String newLine = System.getProperty("line.separator");
				String statusMessage = threads.getStatusMessage();
				if ((statusMessage != null) && (!statusMessage.isEmpty())) {
					textAreaStatus.setText(textAreaStatus.getText().concat(statusMessage.concat(newLine)));
				}
			} catch (Exception ex) {
				ex.printStackTrace();
			}
		}
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonSubmit;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelIP;
    private javax.swing.JLabel labelMS;
    private javax.swing.JLabel labelMessage;
    private javax.swing.JLabel labelPort;
    private javax.swing.JLabel labelTimeout;
    private javax.swing.JTextArea textAreaMessage;
    private javax.swing.JTextArea textAreaStatus;
    private javax.swing.JTextField textFieldIP;
    private javax.swing.JTextField textFieldPort;
    private javax.swing.JFormattedTextField textFieldTimeout;
    // End of variables declaration//GEN-END:variables

	// Instanciando classe adicional para invocar novas threads
	private AdditionalThreads threads;
}
